redesign of code structure count : 0 

done : 

   - graph implem (reused the one of wog )

   - implemented entities 

   - count how many guys move 

   - implemented attack structure 

   - implemented movement structure 

   - attack function thing to update closed links

   - implemented the load attack function ; the program can now be 
     tested yay! 

    implement the main 

   - add a lil helper thing that takes the nb of it and the nb of attacks and divide and inits the 
     array w the index of the attack start this way 

   - tog discr function was actually really ez 

   - make script that produces random attack function 


pending : 

C : 

	- not much tbh 

Python : 

  

   - make a script to parse [result dir],[simulation name] and plot it 
   
   - script to generate an attack file that relies on betweeneness 
     centrality
   - static attack can be "oh yeah I reduce the graph size and dassit   
 
   - make a script that LOADS the attack function from WOG flux trace 

      - need to match the hmmm the of lines in a dict this should be "ok"
- shell : 
	- script to launch multiple sims w same parameters but different 
          attack fn's and outputs  
Misc : 

   - docs
   - gpl 
   - cursewords



So I failed miserably at enumerating the pathes and I'm mad now. 
I'll try the other solution : 

treating the OSMNx non discretised graph for WOG and TOG in parallel; I think this SHOULD be easier. 
I'll have to write som dict thing like 


wog C index -> wog python index -> tog python index -> tog c index   

to keep track of the line's labels

but this should be the easy part 


---------------------- 

The whole interfacing programs together is paused atm cuz I'll test the actual C program lol 
